version: '3.8'

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Auth Service
  auth:
    build:
      context: ../services/auth
      dockerfile: Dockerfile
    restart: always
    environment:
      PORT: 3000
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
    depends_on:
      - postgres
    networks:
      - app-network

  # Business Logic Service
  business-logic:
    build:
      context: ../services/business-logic
      dockerfile: Dockerfile
    restart: always
    environment:
      PORT: 3001
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
    depends_on:
      - postgres
      - auth
    networks:
      - app-network

  # File Storage Service
  file-storage:
    build:
      context: ../services/file-storage
      dockerfile: Dockerfile
    restart: always
    environment:
      PORT: 3002
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: "false"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - postgres
      - minio
      - auth
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ../services/frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      NODE_ENV: production
    depends_on:
      - auth
      - business-logic
      - file-storage
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - auth
      - business-logic
      - file-storage
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: {}
  minio-data: {}